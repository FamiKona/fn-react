{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","numClicks","state","react_default","a","createElement","className","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","placeholder","Button_default","variant","onClick","Form_default","Group","controlId","Label","Control","Text","Check","label","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.472043fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      numClicks: 0\n    }\n\n  }\n  handleClick = () => {\n    this.setState({\n      numClicks: this.state.numClicks + 1\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\"> */}\n        <header>\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            \n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item active\">\n                    <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">Link</a>\n                </li>\n                <li class=\"nav-item dropdown\">\n                    <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    Dropdown\n                    </a>\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                    <a class=\"dropdown-item\" href=\"#\">Action</a>\n                    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                    </div>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n                </li>\n                </ul>\n                <form class=\"form-inline my-2 my-lg-0\">\n                <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n                <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n    </header>\n          <p>\n            pressed: {this.state.numClicks}\n          </p>\n          <Button \n            variant=\"outline-success\"\n            //color=\"primary\"\n            onClick={this.handleClick}\n            >\n            Press me! Putting a lot of texts here to make it long\n          </Button>\n          <Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicChecbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n\n        {/* </header> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}